{"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":15777,"status":"ok","timestamp":1641889857599,"user":{"displayName":"葉昭宏","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggn_HbAEQbF0F8H3LZDmhDbywgSUiJSt582sOu23A=s64","userId":"07106977847402479880"},"user_tz":-480},"id":"dKioeo5P-c8m","outputId":"0231956b-46d2-4741-c74a-44f89535dd75"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"markdown","metadata":{"id":"PIPLZ5zcsATJ"},"source":["# Testing model accuracy (沒有要放Rasberry pi上跑)"]},{"cell_type":"markdown","metadata":{"id":"Yzpr__Kd6qrU"},"source":["Set up test dataset"]},{"cell_type":"code","execution_count":2,"metadata":{"executionInfo":{"elapsed":739,"status":"ok","timestamp":1641889860346,"user":{"displayName":"葉昭宏","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggn_HbAEQbF0F8H3LZDmhDbywgSUiJSt582sOu23A=s64","userId":"07106977847402479880"},"user_tz":-480},"id":"bKKxfS4_hRWS"},"outputs":[],"source":["import os\n","import cv2\n","import numpy as np\n","from tqdm import tqdm\n","import matplotlib.pyplot as plt\n","import itertools"]},{"cell_type":"code","execution_count":3,"metadata":{"executionInfo":{"elapsed":363,"status":"ok","timestamp":1641889862487,"user":{"displayName":"葉昭宏","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggn_HbAEQbF0F8H3LZDmhDbywgSUiJSt582sOu23A=s64","userId":"07106977847402479880"},"user_tz":-480},"id":"688qAHLFhUu_"},"outputs":[],"source":["DATADIR = r'/content/drive/Shareddrives/AAML_final/Test_Dataset1__Our_Own_Dataset'\n","\n","CATEGORIES = ['Fire_3', 'NoFire_2']"]},{"cell_type":"code","execution_count":4,"metadata":{"executionInfo":{"elapsed":4,"status":"ok","timestamp":1641889863689,"user":{"displayName":"葉昭宏","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggn_HbAEQbF0F8H3LZDmhDbywgSUiJSt582sOu23A=s64","userId":"07106977847402479880"},"user_tz":-480},"id":"z2E_aO0ChnRm"},"outputs":[],"source":["IMG_SIZE = 64\n","def create_training_data():\n","    training_data = []\n","    for category in CATEGORIES:  \n","\n","        path = os.path.join(DATADIR,category) \n","        class_num = CATEGORIES.index(category)  # get the classification  (0 or a 1). 0=C 1=O\n","\n","        for img in tqdm(os.listdir(path)):  # iterate over each image\n","            try:\n","                img_array = cv2.imread(os.path.join(path,img))  # convert to array\n","                new_array = cv2.resize(img_array, (IMG_SIZE, IMG_SIZE))  # resize to normalize data size\n","                training_data.append([new_array, class_num])  # add this to our training_data\n","            except Exception as e:  # in the interest in keeping the output clean...\n","                pass\n","              \n","    return training_data"]},{"cell_type":"code","execution_count":5,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":10749,"status":"ok","timestamp":1641889876556,"user":{"displayName":"葉昭宏","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggn_HbAEQbF0F8H3LZDmhDbywgSUiJSt582sOu23A=s64","userId":"07106977847402479880"},"user_tz":-480},"id":"vAiEcNIXhxpf","outputId":"2101bfef-4008-49b5-e51e-3986d3b0c30b"},"outputs":[{"output_type":"stream","name":"stderr","text":["100%|██████████| 100/100 [00:02<00:00, 34.87it/s]\n","100%|██████████| 100/100 [00:05<00:00, 20.00it/s]\n"]}],"source":["training_data = create_training_data()"]},{"cell_type":"code","execution_count":6,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":312,"status":"ok","timestamp":1641889910743,"user":{"displayName":"葉昭宏","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggn_HbAEQbF0F8H3LZDmhDbywgSUiJSt582sOu23A=s64","userId":"07106977847402479880"},"user_tz":-480},"id":"PzMgTW7mh09X","outputId":"8e46bb19-4ef7-4358-e9aa-dc3c4fb02762"},"outputs":[{"output_type":"stream","name":"stdout","text":["200\n","200\n","(200,)\n"]},{"output_type":"execute_result","data":{"text/plain":["array([0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0,\n","       1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1,\n","       0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0,\n","       1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1,\n","       1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0,\n","       1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1,\n","       1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1,\n","       1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0,\n","       1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1,\n","       1, 1])"]},"metadata":{},"execution_count":6}],"source":["import random\n","test_image_num=200\n","print(len(training_data))\n","random.shuffle(training_data)\n","test_labels=np.zeros((test_image_num,1))\n","\n","c=0\n","for sample in training_data:\n","    test_labels[c]=(sample[1])\n","    c+=1\n","print(c)\n","actual_labels=(test_labels.reshape(test_image_num,))\n","print(actual_labels.shape)\n","actual_labels.astype(int)"]},{"cell_type":"code","execution_count":7,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":372,"status":"ok","timestamp":1641889915550,"user":{"displayName":"葉昭宏","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggn_HbAEQbF0F8H3LZDmhDbywgSUiJSt582sOu23A=s64","userId":"07106977847402479880"},"user_tz":-480},"id":"K2t3uEvziCls","outputId":"95f9b6bc-ba2d-4b0e-b4fc-5252ace82bc3"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(64, 64, 3)"]},"metadata":{},"execution_count":7}],"source":["X = []\n","Y = []\n","\n","for features,label in training_data:\n","    X.append(features)\n","    Y.append(label)\n","\n","X = np.array(X).reshape(-1, IMG_SIZE, IMG_SIZE, 3)\n","X = X/255.0\n","X.shape[1:]"]},{"cell_type":"markdown","metadata":{"id":"S8Cg-QTD6xJq"},"source":["Run testing"]},{"cell_type":"code","execution_count":8,"metadata":{"executionInfo":{"elapsed":4304,"status":"ok","timestamp":1641889922001,"user":{"displayName":"葉昭宏","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggn_HbAEQbF0F8H3LZDmhDbywgSUiJSt582sOu23A=s64","userId":"07106977847402479880"},"user_tz":-480},"id":"N9xG3teydRnT"},"outputs":[],"source":["# use this if model is .tflite file\n","import tensorflow as tf\n","from keras.models import load_model\n","interpreter = tf.lite.Interpreter(model_path='/content/drive/Shareddrives/AAML_final/FireNet-LightWeight-Network-for-Fire-Detection/Trained_Model_FIreNet/quant_part/base_model.tflite')\n","interpreter.allocate_tensors()"]},{"cell_type":"code","execution_count":9,"metadata":{"executionInfo":{"elapsed":474,"status":"ok","timestamp":1641889932343,"user":{"displayName":"葉昭宏","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggn_HbAEQbF0F8H3LZDmhDbywgSUiJSt582sOu23A=s64","userId":"07106977847402479880"},"user_tz":-480},"id":"bKmC6R9XzTRd"},"outputs":[],"source":["import time\n","\n","# A helper function to evaluate the TF Lite model using \"test\" dataset.\n","def evaluate_model(interpreter):\n","  input_index = interpreter.get_input_details()[0][\"index\"]\n","  output_index = interpreter.get_output_details()[0][\"index\"]\n","\n","  # Run predictions on every image in the \"test\" dataset.\n","  prediction_digits = []\n","  Avg_FPS = []\n","  for test_image in X:\n","    # Pre-processing: add batch dimension and convert to float32 to match with\n","    # the model's input data format.\n","    test_image = np.expand_dims(test_image, axis=0).astype(np.float32)\n","\n","    tic = time.time()\n","    interpreter.set_tensor(input_index, test_image)\n","    interpreter.invoke()\n","    output = interpreter.tensor(output_index)\n","    toc = time.time()\n","\n","    digit = np.argmax(output()[0])\n","    \n","    Avg_FPS.append(1 / np.float64(toc - tic))\n","    prediction_digits.append(digit)\n","\n","  # Compare prediction results with ground truth labels to calculate accuracy.\n","  accurate_count = 0\n","  for index in range(len(prediction_digits)):\n","    if prediction_digits[index] == Y[index]:\n","      accurate_count += 1\n","  accuracy = accurate_count * 1.0 / len(prediction_digits)\n","  print('Average FPS :',sum(Avg_FPS)/len(prediction_digits))\n","  return accuracy"]},{"cell_type":"code","execution_count":10,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":926,"status":"ok","timestamp":1641889941560,"user":{"displayName":"葉昭宏","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggn_HbAEQbF0F8H3LZDmhDbywgSUiJSt582sOu23A=s64","userId":"07106977847402479880"},"user_tz":-480},"id":"Iq5YAK7fzbh1","outputId":"eff07a88-38e2-4822-a556-7b867d0b58e3"},"outputs":[{"output_type":"stream","name":"stdout","text":["Average FPS : 569.8102415916865\n","Accuracy : 0.24\n"]}],"source":["print('Accuracy :', evaluate_model(interpreter))"]},{"cell_type":"markdown","metadata":{"id":"EdBtVTi30CgA"},"source":["\n","# Show result (要放Rasberry pi上跑)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"CmZr-2Qq0NFQ"},"outputs":[],"source":["# use this if model is .tflite file\n","import tensorflow as tf\n","from keras.models import load_model\n","interpreter = tf.lite.Interpreter(model_path='/content/drive/Shareddrives/AAML_final/FireNet-LightWeight-Network-for-Fire-Detection/Trained_Model_FIreNet/all_prun_0_80.tflite')\n","interpreter.allocate_tensors()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"yJyK4YSh0Fcn"},"outputs":[],"source":["from tensorflow.keras.preprocessing.image import img_to_array\n","import numpy as np\n","import cv2\n","import time\n","\n","\n","cap = cv2.VideoCapture(r'/content/drive/Shareddrives/AAML_final/Our_Complete_Dataset_Video_and_extra_NoFire_Frames/fire/FireVid20.mp4')\n","time.sleep(2)\n","\n","if cap.isOpened(): # try to get the first frame\n","    rval, frame = cap.read()\n","else:\n","    rval = False\n","\n","\n","IMG_SIZE = 64"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"gzbid3BG0zFE"},"outputs":[],"source":["import time\n","\n","# A helper function to evaluate the TF Lite model using \"test\" dataset.\n","def evaluate_model(interpreter, image):\n","  input_index = interpreter.get_input_details()[0][\"index\"]\n","  output_index = interpreter.get_output_details()[0][\"index\"]\n","\n","  interpreter.set_tensor(input_index, image)\n","  interpreter.invoke()\n","  output = interpreter.tensor(output_index)\n","\n","  digit = np.max(output()[0])\n","\n","  return digit"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000,"output_embedded_package_id":"19qC5sTYXBCbMNGNO5cxk4trNz3_UK-Mp"},"executionInfo":{"elapsed":49253,"status":"error","timestamp":1641879843260,"user":{"displayName":"葉昭宏","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggn_HbAEQbF0F8H3LZDmhDbywgSUiJSt582sOu23A=s64","userId":"07106977847402479880"},"user_tz":-480},"id":"kmJbrAg21z-n","outputId":"7671bda7-2aef-40da-e01c-e5348ed8c623"},"outputs":[{"output_type":"display_data","data":{"text/plain":"Output hidden; open in https://colab.research.google.com to view."},"metadata":{}}],"source":["from google.colab.patches import cv2_imshow\n","import os\n","import psutil\n","  \n","\n","while(1):\n","\n","    rval, image = cap.read()\n","    if rval==True:\n","        orig = image.copy()\n","        \n","        image = cv2.resize(image, (IMG_SIZE, IMG_SIZE))  \n","        image = image.astype(\"float\") / 255.0\n","        image = img_to_array(image)\n","        image = np.expand_dims(image, axis=0).astype(np.float32)\n","        \n","        tic = time.time()\n","        fire_prob = evaluate_model(interpreter, image) * 100\n","        toc = time.time()\n","        # CPU usage\n","        print('CPU usage :', psutil.cpu_percent(), '%')\n","        # Memory usage\n","        total_memory, used_memory, free_memory = map(\n","        int, os.popen('free -t -m').readlines()[-1].split()[1:])\n","        print(\"RAM memory: \", round((used_memory/total_memory) * 100, 2), '%')\n","\n","        print(\"Time taken = \", toc - tic)\n","        print(\"FPS: \", 1 / np.float64(toc - tic))\n","        print(\"Fire Probability: \", fire_prob)\n","        \n","        print(image.shape)\n","        \n","        label = \"Fire Probability: \" + str(fire_prob)\n","        cv2.putText(orig, label, (10, 25),  cv2.FONT_HERSHEY_SIMPLEX,0.7, (0, 255, 0), 2)\n","\n","        cv2_imshow(orig)\n","        \n","        key = cv2.waitKey(10)\n","        if key == 27: # exit on ESC\n","            break\n","    elif rval==False:\n","            break\n","end = time.time()\n","\n","\n","cap.release()\n","cv2.destroyAllWindows()"]}],"metadata":{"colab":{"collapsed_sections":[],"name":"tflite_test_or_show.ipynb ","provenance":[]},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}